name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'  # Trigger only when files in the backend directory change
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  LINT:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Install pipenv
        run: pip install pipenv
  
      - name: Install flake8
        run: pip install flake8

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install

      - name: Lint
        run: |
          cd ./starter/backend
          pipenv run lint

  TEST:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd ./starter/backend
          pipenv install

      - name: Run tests
        run: |
          cd ./starter/backend
          pipenv run test

  DEPLOY:
    needs: [LINT, TEST]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Config AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        env:
          REACT_APP_MOVIE_API_URL: ${{ secrets.BACKEND_API_URL }}
        with:
          context: ./starter/backend
          push: true
          tags: 
            ${{ secrets.ECR_REGISTRY_B }}:${{ github.sha }}  
          build-args: 
            REACT_APP_MOVIE_API_URL="http://$REACT_APP_MOVIE_API_URL/"

      - name: Configure k8s cluster
        working-directory: starter/backend/k8s
        run: |
            aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Set docker image
        working-directory: starter/backend/k8s
        run: |
          kustomize edit set image backend=${{ secrets.ECR_REGISTRY_B }}:${{ github.sha }}
      
      - name: Deploy to kubernetes
        working-directory: starter/backend/k8s
        run: |
          kustomize build | kubectl apply -f -
            
