name: Backend CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  LINT:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Install pipenv
        run: pip install pipenv
  
      - name: Install flake8
        run: pip install flake8

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install

      - name: Lint
        run: |
          cd starter/backend
          pipenv run lint

  TEST:
    needs: LINT
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install

      - name: Run tests
        run: |
          cd starter/backend
          pipenv run test

  DEPLOY:
    needs: [LINT, TEST]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t my-backend:latest .
      - name: Tag Docker Image
        run: docker tag my-backend:latest ${{ secrets.ECR_REGISTRY_B }}:${{ github.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./starter/backend
          push: true
          tags: 521474520625.dkr.ecr.us-east-1.amazonaws.com/backend:latest

